// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.82.6.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';

import 'package:collection/collection.dart';

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';
import 'bridge_generated.io.dart' if (dart.library.html) 'bridge_generated.web.dart';

abstract class FueletSmartContractWallet {
  Future<String> deployContract({required String privateKey, required String nodeUrl, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kDeployContractConstMeta;

  Future<U8Array32> getScript({required String privateKey, required String nodeUrl, required String contractIdStr, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kGetScriptConstMeta;
}

class U8Array32 extends NonGrowableListView<int> {
  static const arraySize = 32;
  U8Array32(Uint8List inner)
      : assert(inner.length == arraySize),
        super(inner);
  U8Array32.unchecked(Uint8List inner) : super(inner);
  U8Array32.init() : super(Uint8List(arraySize));
}

class FueletSmartContractWalletImpl implements FueletSmartContractWallet {
  final FueletSmartContractWalletPlatform _platform;
  factory FueletSmartContractWalletImpl(ExternalLibrary dylib) => FueletSmartContractWalletImpl.raw(FueletSmartContractWalletPlatform(dylib));

  /// Only valid on web/WASM platforms.
  factory FueletSmartContractWalletImpl.wasm(FutureOr<WasmModule> module) => FueletSmartContractWalletImpl(module as ExternalLibrary);
  FueletSmartContractWalletImpl.raw(this._platform);
  Future<String> deployContract({required String privateKey, required String nodeUrl, dynamic hint}) {
    var arg0 = _platform.api2wire_String(privateKey);
    var arg1 = _platform.api2wire_String(nodeUrl);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_deploy_contract(port_, arg0, arg1),
      parseSuccessData: _wire2api_String,
      parseErrorData: null,
      constMeta: kDeployContractConstMeta,
      argValues: [
        privateKey,
        nodeUrl
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kDeployContractConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "deploy_contract",
        argNames: [
          "privateKey",
          "nodeUrl"
        ],
      );

  Future<U8Array32> getScript({required String privateKey, required String nodeUrl, required String contractIdStr, dynamic hint}) {
    var arg0 = _platform.api2wire_String(privateKey);
    var arg1 = _platform.api2wire_String(nodeUrl);
    var arg2 = _platform.api2wire_String(contractIdStr);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_get_script(port_, arg0, arg1, arg2),
      parseSuccessData: _wire2api_u8_array_32,
      parseErrorData: null,
      constMeta: kGetScriptConstMeta,
      argValues: [
        privateKey,
        nodeUrl,
        contractIdStr
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kGetScriptConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "get_script",
        argNames: [
          "privateKey",
          "nodeUrl",
          "contractIdStr"
        ],
      );

  void dispose() {
    _platform.dispose();
  }
// Section: wire2api

  String _wire2api_String(dynamic raw) {
    return raw as String;
  }

  int _wire2api_u8(dynamic raw) {
    return raw as int;
  }

  U8Array32 _wire2api_u8_array_32(dynamic raw) {
    return U8Array32(_wire2api_uint_8_list(raw));
  }

  Uint8List _wire2api_uint_8_list(dynamic raw) {
    return raw as Uint8List;
  }
}

// Section: api2wire

@protected
int api2wire_u8(int raw) {
  return raw;
}

// Section: finalizer
